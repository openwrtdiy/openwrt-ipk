#!/usr/bin/env lua

local json = require "luci.jsonc"
local fs   = require "nixio.fs"

local cpuStatPath = "/proc/stat"
local cpuSysDir   = "/sys/devices/system/cpu"

local function readFile(path)
	local s = fs.readfile(path)
	return s and (s:gsub("^%s+", ""):gsub("%s+$", ""))
end

local function list()
	io.write('{"getCpuStat":{},"getCpuStatFreq":{}}')
end

local function readCpuStat()
	local statTable = {}
	local fh        = io.open(cpuStatPath, "r")
	for line in fh:lines() do
		if line:match("^cpu") then
			local cpu, user, nice, sys, idle, iowait, irq, sirq = line:match(
				"^(%w+)%s+(%d+)%s+(%d+)%s+(%d+)%s+(%d+)%s+(%d+)%s+(%d+)%s+(%d+)")
			statTable[cpu] = {
				["user"]   = tonumber(user),
				["nice"]   = tonumber(nice),
				["sys"]    = tonumber(sys),
				["idle"]   = tonumber(idle),
				["iowait"] = tonumber(iowait),
				["irq"]    = tonumber(irq),
				["sirq"]   = tonumber(sirq),
			}
		end
	end
	fh:close()
	return statTable
end

local function appendCpuFreq(statTable)
	for k, v in pairs(statTable) do
		local freq = readFile(string.format("%s/%s/cpufreq/cpuinfo_cur_freq", cpuSysDir, k))
		if freq then
			statTable[k]["freq"] = tonumber(freq)
		end
	end
	return statTable
end

if arg[1] == "list" then
	list()
elseif arg[1] == "call" then
	if arg[2] == "getCpuStat" then
		io.write(json.stringify(readCpuStat()))
	elseif arg[2] == "getCpuStatFreq" then
		io.write(json.stringify(appendCpuFreq(readCpuStat())))
	end
end

os.exit(0)
