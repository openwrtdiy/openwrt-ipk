#!/bin/sh
#
# A program or script which is executed after the remote system
# successfully authenticates itself. It is executed with the parameters
# <interface-name> <peer-name> <user-name> <tty-device> <speed>
#

#
# The environment is cleared before executing this script
# so the path must be reset
#
PATH=/usr/sbin:/sbin:/usr/bin:/bin
export PATH

AUTH_TIME="$(date "+%Y-%m-%d_%H:%M:%S")"
USER_CONFIG="pppoe-user"
USER_CFGID="$(uci show $USER_CONFIG | grep "$2" | cut -d '.' -sf 2)"
USER_QOS="$(uci get $USER_CONFIG."$USER_CFGID".qos)"
USER_DOWNLOAD="$(uci get $USER_CONFIG."$USER_CFGID".download)"
USER_UPLOAD="$(uci get $USER_CONFIG."$USER_CFGID".upload)"

SQM_ENABLED="$USER_QOS"
SQM_INTERFACE="$1"
SQM_DOWNLOAD="$USER_UPLOAD"
SQM_UPLOAD="$USER_DOWNLOAD"
SQM_QDISC="$(uci get $USER_CONFIG."$USER_CFGID".qdisc)"
SQM_SCRIPT="$(uci get $USER_CONFIG."$USER_CFGID".script)"
SQM_LINKLAYER="$(uci get $USER_CONFIG."$USER_CFGID".linklayer)"
SQM_DEBUG_LOGGING="$(uci get $USER_CONFIG."$USER_CFGID".debug_logging)"
SQM_VERBOSITY="$(uci get $USER_CONFIG."$USER_CFGID".verbosity)"
SQM_OVERHEAD="$(uci get $USER_CONFIG."$USER_CFGID".overhead)"

uci set sqm."$2"=queue
uci set sqm."$2".enabled="$SQM_ENABLED"
uci set sqm."$2".interface="$1"
uci set sqm."$2".download="$SQM_DOWNLOAD"
uci set sqm."$2".upload="$SQM_UPLOAD"
uci set sqm."$2".qdisc="$SQM_QDISC"
uci set sqm."$2".script="$SQM_SCRIPT"
uci set sqm."$2".linklayer="$SQM_LINKLAYER"
uci set sqm."$2".overhead="$SQM_OVERHEAD"
uci set sqm."$2".debug_logging="$SQM_DEBUG_LOGGING"
uci set sqm."$2".verbosity="$SQM_VERBOSITY"
uci commit sqm
/usr/lib/sqm/run.sh start "$1"

SQM_STARTING="$(tc -s qdisc show dev "$1" | grep qdisc)"
echo "$AUTH_TIME $2 Starting QOS: $SQM_STARTING" >> /home/log/userup.log

# last line
