#!/bin/sh
#
# This script is run by the pppd after the link is established.
# It should be used to add routes, set IP address, run the mailq
# etc.
#
# This script is called with the following arguments:
#    Arg  Name               Example
#    $1   Interface name     ppp0
#    $2   The tty            ttyS1
#    $3   The link speed     38400
#    $4   Local IP number    12.34.56.78
#    $5   Peer  IP number    12.34.56.99
#

#
# The  environment is cleared before executing this script
# so the path must be reset
#
PATH=/usr/sbin:/sbin:/usr/bin:/bin
export PATH

USERNAME="$PEERNAME"
IFACE="$1"
TTY="$2"
PEERIP="$5"

LOGIN_TIME="$(date "+%Y-%m-%d_%H:%M:%S")"
USER_LOG="/home/log/userinfo"
USER_LOG_FILE="${USER_LOG}/$USERNAME.log"
USER_CONFIG="pppoe-user"
USER_CFGID="$(uci show $USER_CONFIG | grep "$USERNAME" | cut -d '.' -sf 2)"
USER_PACKAGE="$(uci get $USER_CONFIG."$USER_CFGID".package)"
USER_REGISTER="$(uci get $USER_CONFIG."$USER_CFGID".register)"
USER_QOS="$(uci get $USER_CONFIG."$USER_CFGID".qos)"
USER_DOWNLOAD="$(uci get $USER_CONFIG."$USER_CFGID".download)"
USER_UPLOAD="$(uci get $USER_CONFIG."$USER_CFGID".upload)"
USER_CONNECT="$(uci get $USER_CONFIG."$USER_CFGID".connect)"
RENEWAL_DATE="$(uci get $USER_CONFIG."$USER_CFGID".expires)"

CONFIG_PATH="/var/etc/pppoe-user"
SESSION_PATH="${CONFIG_PATH}/session"

PID="$(cat /var/run/"$IFACE".pid 2>/dev/null)"
MAC="$(ps -w | grep pppd | grep -v 'grep'| grep -h -m 1 "${PID}" | awk '{print $10}' | cut -d : -f 2,2-7)"

mkdir -p ${USER_LOG}
mkdir -p ${SESSION_PATH}

cat <<-EOF > ${SESSION_PATH}/"$USERNAME"."$IFACE"
	{
	    "username": "${USERNAME}",
	    "mac": "${MAC}",
	    "interface": "${IFACE}",
	    "tty": "${TTY}",
	    "speed": "${SPEED}",
	    "ip": "${PEERIP}",
	    "package": "${USER_PACKAGE}",
	    "connect": "${USER_CONNECT}",
	    "updated": "${RENEWAL_DATE}",
	    "uptime": "${LOGIN_TIME}",
	    "pid": "${PID}"
	}
EOF

uci set $USER_CONFIG."$USER_CFGID".macaddress="$MAC"
uci commit $CONFIG

iptables -w -t mangle -A pppoe_user -s "$PEERIP" -m connlimit --connlimit-above "$USER_CONNECT" -j DROP

echo "$LOGIN_TIME $USERNAME Online $IFACE $PID $TTY $PEERIP $MAC" >> /var/log/userup.log

echo "$LOGIN_TIME $USERNAME Online interface: $IFACE pid: $PID device: $TTY clientIP: $PEERIP clientMAC: $MAC" >> "$USER_LOG_FILE"
echo >> "$USER_LOG_FILE"

exit 0
